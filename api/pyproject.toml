[tool.black]
line-length = 79
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.venv
    | \abd-jupyter
    | venv/*
    | _build
    | buck-out
    | build
    | dist
  )/
    | versions
    | dev.py
)
'''

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 79
indent-width = 4
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "versions",
    "dev.py"
]

[tool.ruff.lint]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "E", # pycodestyle errors
    "F", # Pyflakes
    "N", # PEP-8 naming conventions
    "UP", # pyupgrade
    "S", # flake8-bandit
    # "SIM", # flake8-simplify
    "Q", # fix quotes
    "W", # pycodestyle warnings
    "I" # isort
]

ignore = [
# List of ignored rules
"E501", # line too long (enable formatting)
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = [
"F401", # Disable autoremove unused imports
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

# Enable reformatting of code snippets in docstrings.
docstring-code-format = true
docstring-code-line-length = 70

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_ignores = true
# disallow_untyped_calls = true
# this disables return annotations check in functions
disallow_untyped_defs = true
# ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
# strict = true
exclude = [
    'venv/*',
    '.venv/*',
    'mypy_cache/*',
    '.ruff_cache/',
    "versions",
]

[tool.bandit]
exclude_dirs = [
    "tests",
    "migrations",
    "versions",
]

[project]
name = "fox_adventure"
version = "0.1.0"
description = "App for checking changes in Akureyri cruise schedule to quickly adjust bookings for passengers. Also possible to generate passenger lists from BÃ³kun API."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi[standard]>=0.115.8",
    "gunicorn>=23.0.0",
    "jinja2>=3.1.5",
    "python-dotenv>=1.0.1",
    "uvicorn>=0.34.0",
]

[dependency-groups]
dev = [
    "bandit>=1.8.2",
    "black>=25.1.0",
    "mypy>=1.15.0",
    "mypy-extensions>=1.0.0",
    "ruff>=0.9.5",
]
